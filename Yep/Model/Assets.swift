//
//  Assets.swift
//  Yep
//
//  Created by Octree on 2019/7/4.
//  Copyright © 2019 Octree. All rights reserved.
//

import Foundation


enum Target {
    case appKit
    case uiKit
    case swiftUI
}

struct Assets {
    var imagesTree: Namespace
    var colorsTree: Namespace
}

func fileComments(title: String, target: Target?) -> String {
    let date = Date()
    let formatter = DateFormatter()
    formatter.dateFormat = "yyyy/M/d"
    let dateString = formatter.string(from: date)
    formatter.dateFormat = "yyyy"
    let year = formatter.string(from: date)
    let imports: String

    if let target = target {
        switch target {
        case .appKit:
            imports = """
            #if os(macOS) && !targetEnvironment(macCatalyst)
            import AppKit
            """
        case .uiKit:
            imports = """
            #if !os(macOS) || targetEnvironment(macCatalyst)
            import UIKit
            """
        case .swiftUI:
            imports = """
            import SwiftUI
            """
        }
    } else {
        imports = """
        import Foundation
        """
    }


    return """
    //
    //  \(title)
    //
    //  ⚠️ DO NOT EDIT.
    //  Code generated by Yep(https://github.com/octree/Yep) on \(dateString).
    //  Copyright © \(year) Octree. All rights reserved.
    //
    
    \(imports)
    
    """
}

extension Assets {
    func colorsCode(target: Target, isSPM: Bool = false) -> String {
        let baseType = Asset.returnType(type: .color, target: target)
        return """
        \(fileComments(title: "Color Assets", target: target))
        extension \(baseType) {
        \(colorsTree.generateCode(indentation: "    ", target: target, isSPM: isSPM, separator: "/"))
        }
        \(target == .swiftUI ? "" : "#endif")
        """
    }
    
    func imagesCode(target: Target, isSPM: Bool = true) -> String {
        let baseType = Asset.returnType(type: .image, target: target)
        return """
        \(fileComments(title: "Image Assets", target: target))
        extension \(baseType) {
        \(imagesTree.generateCode(indentation: "    ", target: target, isSPM: isSPM, separator: "/"))
        }
        \(target == .swiftUI ? "" : "#endif")
        """
    }
}
